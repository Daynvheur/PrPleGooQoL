<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.github.prplegoo</groupId>
    <artifactId>prplegoo-qol-mod</artifactId>
    <version>0.68.22.0</version>

    <profiles>
        <profile>
            <id>windows</id>
            <properties>
                <game.mod.directory>${user.home}/AppData/Roaming/songsofsyx/mods</game.mod.directory>
                <game.install.directory>C:/Program Files (x86)/Steam/steamapps/common/Songs of Syx</game.install.directory>
                <game.mod.uploader.directory>${user.home}/AppData/Roaming/songsofsyx/mods-uploader</game.mod.uploader.directory>
            </properties>
            <activation>
                <os>
                    <family>windows</family>
                </os>
            </activation>
        </profile>
        <profile>
            <id>linux</id>
            <properties>
                <game.mod.directory>${user.home}/.local/share/songsofsyx/mods</game.mod.directory>
                <game.install.directory>${user.home}/.steam/steam/steamapps/common/Songs of Syx</game.install.directory>
                <game.mod.uploader.directory>${user.home}/.local/share/songsofsyx/mods-uploader</game.mod.uploader.directory>
            </properties>
            <activation>
                <os>
                    <family>unix</family>
                </os>
            </activation>
        </profile>
        <profile>
            <id>mods-uploader</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-clean-plugin</artifactId>
                        <executions>
                            <execution>
                                <configuration>
                                    <filesets>
                                        <fileset>
                                            <!-- Remove installed mod from mod uploader directory on clean -->
                                            <directory>${mod.uploader.directory}</directory>
                                            <includes>
                                                <!-- Deletes mod folder with files -->
                                                <include>**</include>
                                            </includes>
                                            <followSymlinks>false</followSymlinks>
                                        </fileset>
                                    </filesets>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-resources-plugin</artifactId>
                        <executions>
                            <!-- Copy the mod files into the mod uploader folder -->
                            <execution>
                                <id>copy-mod-to-mod-uploader</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${mod.uploader.directory}</outputDirectory>
                                    <includeEmptyDirs>true</includeEmptyDirs>
                                    <overwrite>true</overwrite>
                                    <resources>
                                        <resource>
                                            <directory>${mod.build.output.directory}</directory>
                                            <excludes>
                                                <exclude>**/_src/**</exclude>
                                            </excludes>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <properties>
        <!-- Songs of Syx uses Java 1.8 -->
        <maven.compiler.target>1.8</maven.compiler.target>
        <maven.compiler.source>1.8</maven.compiler.source>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!-- These settings will go into the mods _Info.txt file -->
        <mod.version>${project.version}</mod.version>
        <mod.name>PrPleGooQoL</mod.name>
        <mod.description>
Hold shift to max/min values. Commit war crimes with less wrist strain by holding down shift. Press enter to confirm "ARE YOU SURE" alerts. Don't input text when the game asks for a number. Keypad enter is enter too!
        </mod.description>
        <mod.author>PrPleGoo</mod.author>
        <mod.info>
Greetings despot,

This mod changes a few interactions in the game:
- Holding shift when when clicking plus or minus buttons will set their value to the maximum or minimum respectively.
- You can no longer input text into an input field that prompts you for a number.
- Keypad enter to work on all places where enter works.
- Holding shift when doing the various war crimes on the world map no longer gives you a pop-up to confirm.
- Hold shift to not get prompted for assigning punishments in the stockades.
- You can filter punishments by race in the stockades.
- A little arrow over the resources to show if your consumption is outpacing your income.
- Real life time is displayed under the season wheel.
- Quickly replace a noble when they die.

I did this by directly overwriting the classes that implement these behaviours. So if your game is on a different version it probably won't work. If you have another mod that alters the same file, it won't work.
If you have any more suggestions like this, feel free to contact me on discord or steam.

Known compatible mods, these mods have been used by me or others and no problems have been reported:
- [v68] PrPleGoo Region Rework, https://steamcommunity.com/sharedfiles/filedetails/?id=3417936451
- Extra Info, https://steamcommunity.com/sharedfiles/filedetails/?id=3352452572
- Trade-Sorter (v68), https://steamcommunity.com/sharedfiles/filedetails/?id=3419268878
- Cute Race!, https://steamcommunity.com/workshop/filedetails/?id=3418470482
- Vargen Race (V68), https://steamcommunity.com/sharedfiles/filedetails/?id=2918830792
- Draken Race (V68), https://steamcommunity.com/sharedfiles/filedetails/?id=3160170506
If you use a different mod than any of the above and notice no game breaking issues, please let me and other users know!

Enjoy!

- a fellow despot

Available on github.
        </mod.info>
        <game.version.major>68</game.version.major>
        <game.version.minor>22</game.version.minor>

        <!-- Build settings -->
        <game.version.directory>V${game.version.major}</game.version.directory>
        <game.jar.name>SongsOfSyx.jar</game.jar.name>
        <game.jar.source.name>SongsOfSyx-sources.jar</game.jar.source.name>
        <game.mod.uploader.content.directory>${game.mod.uploader.directory}/WorkshopContent</game.mod.uploader.content.directory>

        <mod.files.name>mod-files</mod.files.name>
        <mod.install.directory>${game.mod.directory}/${mod.name}</mod.install.directory>
        <mod.uploader.directory>${game.mod.uploader.content.directory}/${mod.name}</mod.uploader.directory>
        <mod.dependency.lib.directory>${project.basedir}/lib</mod.dependency.lib.directory>
        <mod.build.output.directory>${basedir}/target/out/${mod.name}</mod.build.output.directory>
        <mod.files.build.output.directory>${mod.build.output.directory}/${game.version.directory}</mod.files.build.output.directory>
        <mod.script.output.directory>${mod.files.build.output.directory}/script</mod.script.output.directory>
        <mod.source.output.directory>${mod.files.build.output.directory}/script/_src</mod.source.output.directory>
        <mod.files.directory>${project.basedir}/src/main/resources/${mod.files.name}</mod.files.directory>

        <!-- Dependency versions -->
        <junit-jupiter-engine.version>5.9.2</junit-jupiter-engine.version>
        <mockito-core.version>4.11.0</mockito-core.version>
        <assertj-core.version>3.24.2</assertj-core.version>
        <lombok.version>1.18.26</lombok.version>

        <!-- Build plugin versions -->
        <maven-resources-plugin.version>3.2.0</maven-resources-plugin.version>
        <maven-surefire-plugin.version>2.22.2</maven-surefire-plugin.version>
        <junit-platform-surefire-provider.version>1.3.2</junit-platform-surefire-provider.version>
        <maven-source-plugin.version>3.2.1</maven-source-plugin.version>
        <maven-install-plugin.version>3.1.0</maven-install-plugin.version>
        <maven-clean-plugin.version>3.2.0</maven-clean-plugin.version>
        <maven-shade-plugin.version>3.6.0</maven-shade-plugin.version>
    </properties>

    <dependencies>
        <!-- Game dependency SongsOfSyx.jar -->
        <dependency>
            <groupId>com.songsofsyx</groupId>
            <artifactId>songsofsyx</artifactId>
            <version>${game.version.major}.${game.version.minor}</version>
        </dependency>

        <!-- Lazy Developer -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- Testing -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit-jupiter-engine.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${mockito-core.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>${assertj-core.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <!-- Always use the same name for the jar file -->
        <finalName>${mod.name}</finalName>


        <!-- We don't need the mod-files in our mod jar -->
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <excludes>
                    <exclude>${mod.files.name}/**</exclude>
                </excludes>
                <filtering>false</filtering>
            </resource>
        </resources>

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>${maven-source-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${maven-resources-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>${maven-install-plugin.version}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>${maven-clean-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-shade-plugin</artifactId>
                    <version>${maven-shade-plugin.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>

            <!-- Build a fat / uber jar containing all dependencies -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <artifactSet>
                                <excludes>
                                    <exclude>com.songsofsyx:*</exclude>
                                </excludes>
                            </artifactSet>
                            <createDependencyReducedPom>false</createDependencyReducedPom>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-clean-plugin</artifactId>
                <configuration>
                    <filesets>
                        <fileset>
                            <!-- Remove installed mod from games mod folder on clean -->
                            <directory>${mod.install.directory}</directory>
                            <includes>
                                <!-- Deletes mod folder with files -->
                                <include>**</include>
                            </includes>
                            <followSymlinks>false</followSymlinks>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>

            <!-- Prepare game dependencies (thx @ https://github.com/MilanDierick for pointing me to the game source files) -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-install-plugin</artifactId>
                <executions>
                    <!-- Install game jar as dependency code -->
                    <execution>
                        <id>install-game-jar</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>install-file</goal>
                        </goals>
                        <configuration>
                            <groupId>com.songsofsyx</groupId>
                            <artifactId>songsofsyx</artifactId>
                            <version>${game.version.major}.${game.version.minor}</version>
                            <packaging>jar</packaging>
                            <file>${game.install.directory}/${game.jar.name}</file>
                            <generatePom>true</generatePom>
                        </configuration>
                    </execution>

                    <!-- Install game source jar as dependency code -->
                    <execution>
                        <id>install-game-sources-jar</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>install-file</goal>
                        </goals>
                        <configuration>
                            <groupId>com.songsofsyx</groupId>
                            <artifactId>songsofsyx</artifactId>
                            <version>${game.version.major}.${game.version.minor}</version>
                            <packaging>jar</packaging>
                            <classifier>sources</classifier>
                            <file>${game.install.directory}/info/${game.jar.source.name}</file>
                            <generatePom>false</generatePom>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Attach mod source code -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <phase>package</phase>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Build mod files -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>

                    <!-- Copy files such as assets from the resources source-->
                    <execution>
                        <id>copy-mod-files</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${mod.files.build.output.directory}</outputDirectory>
                            <includeEmptyDirs>true</includeEmptyDirs>
                            <resources>
                                <resource>
                                    <directory>${mod.files.directory}</directory>
                                    <excludes>
                                        <!-- Everything beginning with a dot -->
                                        <exclude>**/.*</exclude>
                                        <exclude>_Info.txt</exclude>
                                    </excludes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>

                    <!-- Copy mod _Info.txt file and replace tokens -->
                    <execution>
                        <id>copy-mod-info</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${mod.build.output.directory}</outputDirectory>
                            <includeEmptyDirs>true</includeEmptyDirs>
                            <resources>
                                <resource>
                                    <directory>${mod.files.directory}</directory>
                                    <includes>
                                        <include>_Info.txt</include>
                                    </includes>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>

                    <!-- Copy the actual compiled jar into the correct folder -->
                    <execution>
                        <id>copy-mod-script-jar</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${mod.script.output.directory}</outputDirectory>
                            <includeEmptyDirs>true</includeEmptyDirs>
                            <resources>
                                <resource>
                                    <directory>${project.build.directory}</directory>
                                    <includes>
                                        <include>${project.build.finalName}.jar</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>

                    <!-- Copy source code -->
                    <execution>
                        <id>copy-mod-source-code</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${mod.source.output.directory}</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${project.build.directory}</directory>
                                    <includes>
                                        <include>${project.build.finalName}-sources.jar</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>

                    <!-- Copy the mod files into the game -->
                    <execution>
                        <id>copy-mod-to-game</id>
                        <phase>install</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${mod.install.directory}</outputDirectory>
                            <includeEmptyDirs>true</includeEmptyDirs>
                            <overwrite>true</overwrite>
                            <resources>
                                <resource>
                                    <directory>${mod.build.output.directory}</directory>
                                    <excludes>
                                        <exclude>**/_src/**</exclude>
                                    </excludes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Testing -->
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
                <dependencies>
                    <dependency>
                        <groupId>org.junit.platform</groupId>
                        <artifactId>junit-platform-surefire-provider</artifactId>
                        <version>${junit-platform-surefire-provider.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
        </plugins>
    </build>
</project>